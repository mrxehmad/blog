<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Ehmi</title>
    <link href="https://blog.ehmad.site/feed.xml" rel="self" />
    <link href="https://blog.ehmad.site" />
    <updated>2024-11-16T20:01:30+05:00</updated>
    <author>
        <name>Ehmad</name>
    </author>
    <id>https://blog.ehmad.site</id>

    <entry>
        <title>Monitor the network traffic of a specific APP on Windows </title>
        <author>
            <name>Ehmad</name>
        </author>
        <link href="https://blog.ehmad.site/monitor-the-network-traffic-of-a-specific-app-on-windows/"/>
        <id>https://blog.ehmad.site/monitor-the-network-traffic-of-a-specific-app-on-windows/</id>

        <updated>2024-11-16T20:01:30+05:00</updated>
            <summary>
                <![CDATA[
                    To monitor the network traffic of a specific app on Windows using Wireshark, follow these steps: To filter traffic from a specific app, first identify the app’s PID (Process ID): Alternatively: netstat -ano | findstr :&lt;Port Number&gt; Replace &lt;Port Number&gt; with the specific port number&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>To monitor the network traffic of a specific app on Windows using <strong>Wireshark</strong>, follow these steps:</p><h3 id="1-install-wireshark-if-not-already-installed">1. <strong>Install Wireshark (if not already installed)</strong></h3>
<ul>
<li>Download and install Wireshark from <a href="https://www.wireshark.org/">wireshark.org</a>.</li>
<li>Make sure to also install <code>Npcap</code> during the installation, which is required for network capture.</li>
</ul>
<h3 id="2-identify-the-apps-process-id-pid">2. <strong>Identify the App’s Process ID (PID)</strong></h3>
<p>   To filter traffic from a specific app, first identify the app’s PID (Process ID):</p><ul>
<li>Open <strong>Task Manager</strong> by pressing <code>Ctrl + Shift + Esc</code> or right-clicking the taskbar and selecting <strong>Task Manager</strong>.</li>
<li>Go to the <strong>Details</strong> tab, find the app, and note the <strong>PID</strong>.</li>
</ul>
<p>   Alternatively:</p><ul>
<li>Use the <code>netstat</code> command in Command Prompt to list processes with network connections:<pre><code>netstat -ano | findstr :&lt;Port Number&gt;
</code></pre>
<ul>
<li>Replace <code>&lt;Port Number&gt;</code> with the specific port number if you know it.</li>
</ul>
</li>
</ul>
<h3 id="3-open-wireshark-and-select-network-interface">3. <strong>Open Wireshark and Select Network Interface</strong></h3>
<ul>
<li>Launch Wireshark and select the network interface connected to the internet (usually <code>Wi-Fi</code> or <code>Ethernet</code>).</li>
<li>Start capturing traffic by double-clicking the interface.</li>
</ul>
<h3 id="4-apply-a-filter-to-capture-traffic-of-the-specific-app">4. <strong>Apply a Filter to Capture Traffic of the Specific App</strong></h3>
<p>   Now, you can filter traffic based on the PID of the app.</p><ul>
<li>In the Wireshark <strong>Display Filter</strong> bar, use the following filter format:<pre><code>tcp.port == &lt;port_number&gt;
</code></pre>
Replace <code>&lt;port_number&gt;</code> with the port used by the application.</li>
</ul>
<p>   Or if you don’t know the port:</p><ul>
<li>Use the <strong>Capture Filter</strong> for IPs if you know the IP range of the traffic expected, or</li>
<li>To track down which traffic belongs to your app dynamically, you might need to manually inspect connections, then fine-tune your filter.</li>
</ul>
<h3 id="5-analyze-the-captured-packets">5. <strong>Analyze the Captured Packets</strong></h3>
<ul>
<li>Once you’ve filtered the packets to your application, analyze details like source and destination IPs, protocols, and data flow.</li>
<li>Stop the capture when you have enough data to review.</li>
</ul>
<h3 id="additional-tips">Additional Tips</h3>
<ul>
<li><strong>Use the <code>Process Monitor (ProcMon)</code></strong>: ProcMon can help to track which ports are opened by specific processes.</li>
<li><strong>Use Wireshark’s Protocol Hierarchy and Statistics</strong>: To understand traffic types used by the app.
<figure class="post__image"><img loading="lazy" src="https://blog.ehmad.site/media/posts/10/Screenshot-2024-11-16-200027.png" alt="Monitor the network traffic of a specific APP on Windows" width="1920" height="1080"  sizes="(max-width: 1920px) 100vw, 1920px" srcset="https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-xs.webp 640w ,https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-sm.webp 768w ,https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-md.webp 1024w ,https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-lg.webp 1366w ,https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-xl.webp 1600w ,https://blog.ehmad.site/media/posts/10/responsive/Screenshot-2024-11-16-200027-2xl.webp 1920w"></figure>
This should give you insights into your app’s network activity specifically.</li>
</ul>

            ]]>
        </content>
    </entry>
    <entry>
        <title>How to Mount a WebDAV Server as a Network Drive in Windows 10</title>
        <author>
            <name>Ehmad</name>
        </author>
        <link href="https://blog.ehmad.site/how-to-mount-a-webdav-server-as-a-network-drive-in-windows-10/"/>
        <id>https://blog.ehmad.site/how-to-mount-a-webdav-server-as-a-network-drive-in-windows-10/</id>

        <updated>2024-11-15T12:24:15+05:00</updated>
            <summary>
                <![CDATA[
                    Introduction Mapping a WebDAV server to a drive letter in Windows 10 allows for seamless file access, making it feel just like a local drive. This guide will walk you through the steps to connect your WebDAV server at https://example.com/webdev as a network drive in&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h3 id="introduction">Introduction</h3>
<p>Mapping a WebDAV server to a drive letter in Windows 10 allows for seamless file access, making it feel just like a local drive. This guide will walk you through the steps to connect your WebDAV server at <code>https://example.com/webdev</code> as a network drive in Windows 10, allowing easy drag-and-drop functionality for managing files.</p><h3 id="prerequisites">Prerequisites</h3>
<p>Before we begin, ensure you have:</p><ul>
<li>The WebDAV server URL (<code>https://example.com/webdev</code>).</li>
<li>Credentials (username and password) for accessing the WebDAV server.</li>
</ul>
<h3 id="step-1-open-file-explorer">Step 1: Open File Explorer</h3>
<p>Start by opening <strong>File Explorer</strong> on your Windows 10 computer. You can do this quickly by pressing <strong>Windows + E</strong> on your keyboard.</p><h3 id="step-2-navigate-to-this-pc">Step 2: Navigate to “This PC”</h3>
<p>In File Explorer, click on <strong>This PC</strong> in the left sidebar. This is where we’ll add the WebDAV server as a network drive.</p><h3 id="step-3-map-network-drive">Step 3: Map Network Drive</h3>
<ol>
<li>In the <strong>This PC</strong> window, go to the top menu and select <strong>Computer</strong>.</li>
<li>Click on <strong>Map network drive</strong> from the dropdown menu. This will open the Map Network Drive wizard.</li>
</ol>
<h3 id="step-4-choose-a-drive-letter">Step 4: Choose a Drive Letter</h3>
<p>In the Map Network Drive wizard:</p><ul>
<li><strong>Drive</strong>: Choose an available drive letter for the WebDAV server (e.g., <code>Z:</code>).</li>
</ul>
<p>Choosing a memorable drive letter will make it easy to find later.</p><h3 id="step-5-enter-the-webdav-url">Step 5: Enter the WebDAV URL</h3>
<p>In the <strong>Folder</strong> field, enter your WebDAV server URL:  </p><pre><code>https://example.com/webdev
</code></pre>
<h3 id="step-6-connect-using-different-credentials">Step 6: Connect Using Different Credentials</h3>
<p>Check the box labeled <strong>Connect using different credentials</strong>. This is important if your WebDAV server requires a username and password for access.</p><h3 id="step-7-finish-and-authenticate">Step 7: Finish and Authenticate</h3>
<ol>
<li>Click <strong>Finish</strong> to complete the setup.</li>
<li>A prompt will appear, asking you to enter your <strong>username</strong> and <strong>password</strong> for the WebDAV server. Input your credentials.</li>
<li>Optionally, check <strong>Remember my credentials</strong> if you want Windows to save this information for future connections.</li>
</ol>
<h3 id="step-8-verify-the-connection">Step 8: Verify the Connection</h3>
<p>If the connection is successful, the WebDAV folder will be accessible as a network drive in <strong>This PC</strong> under the drive letter you selected. You can now access the WebDAV server directly from File Explorer, just like any other folder on your computer.</p><figure class="post__image"><img loading="lazy" src="https://blog.ehmad.site/media/posts/9/rtaImage.jpeg" alt="How to Mount a WebDAV Server as a Network Drive in Windows 10" width="1047" height="606"  sizes="(max-width: 1920px) 100vw, 1920px" srcset="https://blog.ehmad.site/media/posts/9/responsive/rtaImage-xs.webp 640w ,https://blog.ehmad.site/media/posts/9/responsive/rtaImage-sm.webp 768w ,https://blog.ehmad.site/media/posts/9/responsive/rtaImage-md.webp 1024w ,https://blog.ehmad.site/media/posts/9/responsive/rtaImage-lg.webp 1366w ,https://blog.ehmad.site/media/posts/9/responsive/rtaImage-xl.webp 1600w ,https://blog.ehmad.site/media/posts/9/responsive/rtaImage-2xl.webp 1920w"></figure><h3 id="troubleshooting-common-issues">Troubleshooting Common Issues</h3>
<p>If you encounter any problems connecting, here are a few solutions to try:</p><ul>
<li><p><strong>WebDAV Client Compatibility</strong>: Windows’ built-in WebDAV client may not work with all servers. If you have connection issues, consider using a third-party client like <strong>Cyberduck</strong> or <strong>WinSCP</strong>.</p></li>
<li><p><strong>Firewall or Antivirus Interference</strong>: Occasionally, firewall or antivirus settings may block WebDAV connections. Temporarily disable them to see if that resolves the issue.</p></li>
<li><p><strong>Ensure HTTPS Compatibility</strong>: If your WebDAV server only supports HTTP, replace <code>https://</code> with <code>http://</code> in the URL. However, HTTPS is recommended for security.</p></li>
</ul>
<hr>
<h3 id="conclusion">Conclusion</h3>
<p>Mapping a WebDAV server to a network drive in Windows 10 offers the convenience of cloud storage with the familiarity of a local drive. Now, you can manage files on your WebDAV server just as you would on any other drive. Enjoy the streamlined workflow and easy access to your files!</p><p>Let us know if you need help troubleshooting any issues or have questions about WebDAV setup on other platforms!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How to Use ADB Wirelessly Over Wi-Fi</title>
        <author>
            <name>Ehmad</name>
        </author>
        <link href="https://blog.ehmad.site/how-to-use-adb-wirelessly-over-wi-fi/"/>
        <id>https://blog.ehmad.site/how-to-use-adb-wirelessly-over-wi-fi/</id>

        <updated>2024-11-14T12:08:13+05:00</updated>
            <summary>
                <![CDATA[
                    To use ADB (Android Debug Bridge) wirelessly, you’ll need to connect your Android device and your computer over the same Wi-Fi network. Here are the steps to do this: adb devices Your device should appear in the list. 3. Enable ADB over TCP/IP Run this&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>To use ADB (Android Debug Bridge) wirelessly, you’ll need to connect your Android device and your computer over the same Wi-Fi network. Here are the steps to do this:</p><h3 id="1-connect-your-device-via-usb-first">1. Connect your device via USB first</h3>
<ul>
<li>Start by connecting your Android device to your computer with a USB cable.</li>
<li>Ensure you have <strong>USB debugging</strong> enabled on your device. You can enable this by going to:<ul>
<li><strong>Settings</strong> &gt; <strong>About Phone</strong> &gt; <strong>Build Number</strong> (tap 7 times to enable Developer Options).</li>
<li>Then go to <strong>Developer Options</strong> &gt; <strong>USB Debugging</strong>.</li>
</ul>
</li>
</ul>
<figure class="post__image"><img loading="lazy" src="https://blog.ehmad.site/media/posts/8/adb_wifi-wireless_debugging.png" alt="Use ADB Wirelessly Over Wi-Fi" width="365" height="675"  sizes="(max-width: 1920px) 100vw, 1920px" srcset="https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-xs.webp 640w ,https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-sm.webp 768w ,https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-md.webp 1024w ,https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-lg.webp 1366w ,https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-xl.webp 1600w ,https://blog.ehmad.site/media/posts/8/responsive/adb_wifi-wireless_debugging-2xl.webp 1920w"></figure><h3 id="2-open-a-terminal-or-command-prompt-on-your-computer">2. Open a terminal or command prompt on your computer</h3>
<ul>
<li>Open the Command Prompt (Windows) or Terminal (Mac/Linux) where ADB is installed.</li>
<li>Type the following command to ensure your device is recognized:<pre><code class="language-bash">adb devices
</code></pre>
Your device should appear in the list.</li>
</ul>
<h3 id="3-enable-adb-over-tcpip">3. Enable ADB over TCP/IP</h3>
<ul>
<li>Run this command to switch ADB to TCP/IP mode:<pre><code class="language-bash">adb tcpip 5555
</code></pre>
This sets ADB to listen for connections on port 5555.</li>
</ul>
<h3 id="4-find-your-devices-ip-address">4. Find your device’s IP address</h3>
<ul>
<li>On your Android device, go to <strong>Settings</strong> &gt; <strong>About Phone</strong> &gt; <strong>Status</strong> &gt; <strong>IP address</strong> (or similar path, depending on the device).</li>
<li>Note down the IP address (e.g., <code>192.168.1.5</code>).</li>
</ul>
<h3 id="5-connect-to-your-device-wirelessly">5. Connect to your device wirelessly</h3>
<ul>
<li>Run the following command using your device’s IP address:<pre><code class="language-bash">adb connect 192.168.1.5:5555
</code></pre>
</li>
<li>Replace <code>192.168.1.5</code> with the actual IP address of your device.</li>
</ul>
<h3 id="6-disconnect-the-usb-cable">6. Disconnect the USB cable</h3>
<ul>
<li>Now you can disconnect the USB cable. Your ADB connection should remain active over Wi-Fi.</li>
<li>Verify the connection by running:<pre><code class="language-bash">adb devices
</code></pre>
You should see your device listed with the IP address instead of a USB ID.</li>
</ul>
<h3 id="7-use-adb-commands-wirelessly">7. Use ADB commands wirelessly</h3>
<p>Now you can run any ADB command wirelessly as long as your computer and the Android device remain on the same Wi-Fi network.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Authentication token manipulation error</title>
        <author>
            <name>Ehmad</name>
        </author>
        <link href="https://blog.ehmad.site/authentication-token-manipulation-error-2/"/>
        <id>https://blog.ehmad.site/authentication-token-manipulation-error-2/</id>

        <updated>2024-11-14T11:21:23+05:00</updated>
            <summary>
                <![CDATA[
                    The “Authentication token manipulation error” in Debian usually indicates an issue with permissions or file corruption in authentication-related files. Here’s a step-by-step guide to troubleshoot and fix this: sudo passwd ahmad If you’re still encountering the same issue, proceed with the next steps. 2. Ensure&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>The “Authentication token manipulation error” in Debian usually indicates an issue with permissions or file corruption in authentication-related files. Here’s a step-by-step guide to troubleshoot and fix this:</p><h3 id="1-check-if-youre-root-or-have-sudo-privileges">1. <strong>Check if You’re Root or Have Sudo Privileges</strong></h3>
<ul>
<li>Make sure you’re running the <code>passwd</code> command as a root user or with <code>sudo</code> privileges. Run:<pre><code class="language-bash">sudo passwd ahmad
</code></pre>
</li>
<li>If you’re still encountering the same issue, proceed with the next steps.</li>
</ul>
<h3 id="2-ensure-filesystem-is-not-mounted-as-read-only">2. <strong>Ensure Filesystem is Not Mounted as Read-Only</strong></h3>
<ul>
<li>Sometimes, the filesystem is in read-only mode, which prevents changes to authentication files.</li>
<li>To check if the root filesystem is read-only, run:<pre><code class="language-bash">mount | grep &#39; / &#39;
</code></pre>
</li>
<li>If you see <code>ro</code> (read-only), remount it as read-write:<pre><code class="language-bash">sudo mount -o remount,rw /
</code></pre>
</li>
</ul>
<h3 id="3-check-disk-space">3. <strong>Check Disk Space</strong></h3>
<ul>
<li>Lack of disk space can cause this error. Check available disk space with:<pre><code class="language-bash">df -h
</code></pre>
</li>
<li>If your root partition (usually <code>/</code>) is full, try to free up space.</li>
</ul>
<h3 id="4-check-permissions-of-authentication-files">4. <strong>Check Permissions of Authentication Files</strong></h3>
<ul>
<li>Make sure the permissions on key files are correct:<pre><code class="language-bash">sudo ls -l /etc/passwd /etc/shadow /etc/gshadow
</code></pre>
</li>
<li>The permissions should look like this:<pre><code>-rw-r--r-- 1 root root  /etc/passwd
-rw------- 1 root shadow /etc/shadow
-rw------- 1 root shadow /etc/gshadow
</code></pre>
</li>
<li>If they don’t match, set them manually:<pre><code class="language-bash">sudo chmod 644 /etc/passwd
sudo chmod 640 /etc/shadow
sudo chmod 640 /etc/gshadow
</code></pre>
</li>
</ul>
<h3 id="5-try-resetting-the-password-again">5. <strong>Try Resetting the Password Again</strong></h3>
<p>   After performing the above steps, try resetting the password again:</p><pre><code class="language-bash">sudo passwd ahmad
</code></pre>
<h3 id="6-reboot-as-a-last-resort">6. <strong>Reboot as a Last Resort</strong></h3>
<ul>
<li>If none of the above steps work, try rebooting the system to see if it resolves the issue:<pre><code class="language-bash">sudo reboot
</code></pre>
</li>
</ul>
<p>If the error persists after following these steps, there may be a deeper issue with the system files.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>block ICMP (Internet Control Message Protocol) echo requests &quot;Ping&quot;</title>
        <author>
            <name>Ehmad</name>
        </author>
        <link href="https://blog.ehmad.site/block-icmp-internet-control-message-protocol-echo-requests-ping/"/>
        <id>https://blog.ehmad.site/block-icmp-internet-control-message-protocol-echo-requests-ping/</id>

        <updated>2024-11-14T11:19:08+05:00</updated>
            <summary>
                <![CDATA[
                    To configure a server so that it does not respond to ping requests, you can block ICMP (Internet Control Message Protocol) echo requests, which are what ping uses to check if a server is reachable. Here are some ways to achieve this depending on your&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>To configure a server so that it does not respond to ping requests, you can block ICMP (Internet Control Message Protocol) echo requests, which are what <code>ping</code> uses to check if a server is reachable. Here are some ways to achieve this depending on your server’s operating system.</p><h3 id="for-linux-using-iptables-or-ufw">For Linux (using <code>iptables</code> or <code>ufw</code>)</h3>
<h4 id="using-iptables">Using <code>iptables</code></h4>
<ol>
<li><p>Open a terminal on your server.</p></li>
<li><p>Run the following command to drop ICMP echo requests:</p><pre><code class="language-bash">sudo iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
</code></pre>
<p>This command adds a rule to the firewall to drop all incoming ping requests.</p></li>
<li><p>To make this rule persistent (so it survives a reboot), save your iptables rules:</p><pre><code class="language-bash">sudo iptables-save &gt; /etc/iptables/rules.v4
</code></pre>
<p>(Location of <code>rules.v4</code> may vary depending on distribution; for example, it might be <code>/etc/iptables.up.rules</code>.)</p></li>
</ol>
<h4 id="using-ufw-if-ufw-is-installed">Using <code>ufw</code> (if <code>ufw</code> is installed)</h4>
<ol>
<li><p>Open a terminal on your server.</p></li>
<li><p>Disable ICMP echo requests with:</p><pre><code class="language-bash">sudo ufw deny proto icmp
</code></pre>
<p>This will configure <code>ufw</code> to block all ICMP requests, including pings.</p></li>
</ol>
<h3 id="for-windows-server-using-windows-firewall">For Windows Server (using Windows Firewall)</h3>
<ol>
<li>Open <strong>Windows Defender Firewall</strong> with Advanced Security.</li>
<li>Go to <strong>Inbound Rules</strong>.</li>
<li>Look for <strong>File and Printer Sharing (Echo Request - ICMPv4-In)</strong> and <strong>File and Printer Sharing (Echo Request - ICMPv6-In)</strong> rules.</li>
<li>Right-click on these rules and select <strong>Disable</strong>.</li>
</ol>
<h3 id="to-re-enable-ping-responses">To Re-enable Ping Responses</h3>
<p>To allow ping responses again:</p><ul>
<li><p><strong>Linux (iptables)</strong>: Remove the rule by running:</p><pre><code class="language-bash">sudo iptables -D INPUT -p icmp --icmp-type echo-request -j DROP
</code></pre>
</li>
<li><p><strong>Linux (ufw)</strong>: Run:</p><pre><code class="language-bash">sudo ufw allow proto icmp
</code></pre>
</li>
<li><p><strong>Windows</strong>: Re-enable the <strong>File and Printer Sharing (Echo Request)</strong> rules in the Windows Firewall.</p></li>
</ul>
<p>These steps will configure your server to ignore ping requests, effectively making it “invisible” to ping commands while still accessible for other network services.</p>
            ]]>
        </content>
    </entry>
</feed>
